{"ast":null,"code":"import TheClockSvg from \"./TheClockSvg.vue\";\nexport default {\n  name: \"AstroMagento\",\n  components: {\n    TheClockSvg\n  },\n  props: {\n    isPlaying: Boolean\n  },\n\n  data() {\n    return {\n      rotation: {\n        Second: 0,\n        SecondShadow: 0,\n        Minute: 0,\n        MinuteShadow: 0,\n        Hour: 0,\n        HourShadow: 0\n      }\n    };\n  },\n\n  methods: {\n    updateClockHands() {\n      const currentDate = new Date();\n      const seconds = currentDate.getSeconds();\n      const minutes = currentDate.getMinutes() + seconds / 60;\n      const hours = currentDate.getHours() + minutes / 60;\n      this.setRotation(\"Second\", seconds * 6);\n      this.setRotation(\"SecondShadow\", seconds * 6);\n      this.setRotation(\"Minute\", minutes * 6);\n      this.setRotation(\"MinuteShadow\", minutes * 6);\n      this.setRotation(\"Hour\", hours * 30);\n      this.setRotation(\"HourShadow\", hours * 30);\n    },\n\n    setRotation(hand, degree) {\n      this.rotation[hand] = degree;\n    }\n\n  },\n\n  mounted() {\n    this.updateClockHands();\n    this.intervalId = setInterval(this.updateClockHands, 1000);\n  },\n\n  beforeUnmount() {\n    clearInterval(this.intervalId);\n  },\n\n  computed: {\n    secondTransform() {\n      return `rotate(${this.rotation.Second}, 256, 256)`;\n    },\n\n    secondShadowTransform() {\n      return `rotate(${this.rotation.SecondShadow}, 253, 259)`;\n    },\n\n    minuteTransform() {\n      return `rotate(${this.rotation.Minute}, 256, 256)`;\n    },\n\n    minuteShadowTransform() {\n      return `rotate(${this.rotation.MinuteShadow}, 254, 258)`;\n    },\n\n    hourTransform() {\n      return `rotate(${this.rotation.Hour}, 256, 256)`;\n    },\n\n    hourShadowTransform() {\n      return `rotate(${this.rotation.HourShadow}, 255, 257)`;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAYA,OAAOA,WAAP,MAAwB,mBAAxB;AAEA,eAAe;EACbC,IAAI,EAAE,cADO;EAEbC,UAAU,EAAE;IAAEF;EAAF,CAFC;EAGbG,KAAK,EAAE;IACLC,SAAS,EAAEC;EADN,CAHM;;EAMbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,MAAM,EAAE,CADA;QAERC,YAAY,EAAE,CAFN;QAGRC,MAAM,EAAE,CAHA;QAIRC,YAAY,EAAE,CAJN;QAKRC,IAAI,EAAE,CALE;QAMRC,UAAU,EAAE;MANJ;IADL,CAAP;EAUD,CAjBY;;EAkBbC,OAAO,EAAE;IACPC,gBAAgB,GAAG;MACjB,MAAMC,WAAU,GAAI,IAAIC,IAAJ,EAApB;MACA,MAAMC,OAAM,GAAIF,WAAW,CAACG,UAAZ,EAAhB;MACA,MAAMC,OAAM,GAAIJ,WAAW,CAACK,UAAZ,KAA2BH,OAAM,GAAI,EAArD;MACA,MAAMI,KAAI,GAAIN,WAAW,CAACO,QAAZ,KAAyBH,OAAM,GAAI,EAAjD;MAEA,KAAKI,WAAL,CAAiB,QAAjB,EAA2BN,OAAM,GAAI,CAArC;MACA,KAAKM,WAAL,CAAiB,cAAjB,EAAiCN,OAAM,GAAI,CAA3C;MACA,KAAKM,WAAL,CAAiB,QAAjB,EAA2BJ,OAAM,GAAI,CAArC;MACA,KAAKI,WAAL,CAAiB,cAAjB,EAAiCJ,OAAM,GAAI,CAA3C;MACA,KAAKI,WAAL,CAAiB,MAAjB,EAAyBF,KAAI,GAAI,EAAjC;MACA,KAAKE,WAAL,CAAiB,YAAjB,EAA+BF,KAAI,GAAI,EAAvC;IACD,CAbM;;IAcPE,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;MACxB,KAAKnB,QAAL,CAAckB,IAAd,IAAsBC,MAAtB;IACD;;EAhBM,CAlBI;;EAoCbC,OAAO,GAAG;IACR,KAAKZ,gBAAL;IACA,KAAKa,UAAL,GAAkBC,WAAW,CAAC,KAAKd,gBAAN,EAAwB,IAAxB,CAA7B;EACD,CAvCY;;EAwCbe,aAAa,GAAG;IACdC,aAAa,CAAC,KAAKH,UAAN,CAAb;EACD,CA1CY;;EA2CbI,QAAQ,EAAE;IACRC,eAAe,GAAG;MAChB,OAAQ,UAAS,KAAK1B,QAAL,CAAcC,MAAO,aAAtC;IACD,CAHO;;IAIR0B,qBAAqB,GAAG;MACtB,OAAQ,UAAS,KAAK3B,QAAL,CAAcE,YAAa,aAA5C;IACD,CANO;;IAOR0B,eAAe,GAAG;MAChB,OAAQ,UAAS,KAAK5B,QAAL,CAAcG,MAAO,aAAtC;IACD,CATO;;IAUR0B,qBAAqB,GAAG;MACtB,OAAQ,UAAS,KAAK7B,QAAL,CAAcI,YAAa,aAA5C;IACD,CAZO;;IAaR0B,aAAa,GAAG;MACd,OAAQ,UAAS,KAAK9B,QAAL,CAAcK,IAAK,aAApC;IACD,CAfO;;IAgBR0B,mBAAmB,GAAG;MACpB,OAAQ,UAAS,KAAK/B,QAAL,CAAcM,UAAW,aAA1C;IACD;;EAlBO;AA3CG,CAAf","names":["TheClockSvg","name","components","props","isPlaying","Boolean","data","rotation","Second","SecondShadow","Minute","MinuteShadow","Hour","HourShadow","methods","updateClockHands","currentDate","Date","seconds","getSeconds","minutes","getMinutes","hours","getHours","setRotation","hand","degree","mounted","intervalId","setInterval","beforeUnmount","clearInterval","computed","secondTransform","secondShadowTransform","minuteTransform","minuteShadowTransform","hourTransform","hourShadowTransform"],"sourceRoot":"","sources":["/home/runner/work/portfolio/portfolio/src/components/characters/clock/TheClock.vue"],"sourcesContent":["<template>\n  <TheClockSvg\n    :secondTransform=\"secondTransform\"\n    :secondShadowTransform=\"secondShadowTransform\"\n    :minuteTransform=\"minuteTransform\"\n    :minuteShadowTransform=\"minuteShadowTransform\"\n    :hourTransform=\"hourTransform\"\n    :hourShadowTransform=\"hourShadowTransform\"\n  />\n</template>\n\n<script>\nimport TheClockSvg from \"./TheClockSvg.vue\";\n\nexport default {\n  name: \"AstroMagento\",\n  components: { TheClockSvg },\n  props: {\n    isPlaying: Boolean,\n  },\n  data() {\n    return {\n      rotation: {\n        Second: 0,\n        SecondShadow: 0,\n        Minute: 0,\n        MinuteShadow: 0,\n        Hour: 0,\n        HourShadow: 0,\n      },\n    };\n  },\n  methods: {\n    updateClockHands() {\n      const currentDate = new Date();\n      const seconds = currentDate.getSeconds();\n      const minutes = currentDate.getMinutes() + seconds / 60;\n      const hours = currentDate.getHours() + minutes / 60;\n\n      this.setRotation(\"Second\", seconds * 6);\n      this.setRotation(\"SecondShadow\", seconds * 6);\n      this.setRotation(\"Minute\", minutes * 6);\n      this.setRotation(\"MinuteShadow\", minutes * 6);\n      this.setRotation(\"Hour\", hours * 30);\n      this.setRotation(\"HourShadow\", hours * 30);\n    },\n    setRotation(hand, degree) {\n      this.rotation[hand] = degree;\n    },\n  },\n  mounted() {\n    this.updateClockHands();\n    this.intervalId = setInterval(this.updateClockHands, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.intervalId);\n  },\n  computed: {\n    secondTransform() {\n      return `rotate(${this.rotation.Second}, 256, 256)`;\n    },\n    secondShadowTransform() {\n      return `rotate(${this.rotation.SecondShadow}, 253, 259)`;\n    },\n    minuteTransform() {\n      return `rotate(${this.rotation.Minute}, 256, 256)`;\n    },\n    minuteShadowTransform() {\n      return `rotate(${this.rotation.MinuteShadow}, 254, 258)`;\n    },\n    hourTransform() {\n      return `rotate(${this.rotation.Hour}, 256, 256)`;\n    },\n    hourShadowTransform() {\n      return `rotate(${this.rotation.HourShadow}, 255, 257)`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
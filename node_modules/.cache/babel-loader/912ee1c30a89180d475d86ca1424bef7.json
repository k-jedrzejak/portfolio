{"ast":null,"code":"import AstroAirSvg from \"./AstroAirSvg.vue\";\nimport { loopSineInOut } from \"@/constants\";\nimport { setAnimation } from \"../switchAnimation\";\nimport { isProxy, toRaw } from \"vue\";\nexport default {\n  name: \"AstroAir\",\n  components: {\n    AstroAirSvg\n  },\n  mixins: [setAnimation],\n  props: {\n    isPlaying: Boolean\n  },\n  methods: {\n    init() {\n      const astro = this.$refs.astroAirSvg.$refs.astroAir;\n      const head = this.$refs.astroAirSvg.$refs.astroAirHead;\n      const hand = this.$refs.astroAirSvg.$refs.astroAirArm;\n      let timeline;\n\n      if (isProxy(this.timeline)) {\n        timeline = toRaw(this.timeline);\n      }\n\n      if (window.matchMedia(`(max-width: 576px)`).matches) {\n        timeline.fromTo(astro, {\n          y: -30,\n          x: 10,\n          rotate: -25\n        }, {\n          rotateZ: -30,\n          y: \"random(-30, -30)\",\n          x: \"random(10, 40)\",\n          duration: \"random(4, 7)\",\n          ...loopSineInOut,\n          repeatRefresh: true\n        }, 0);\n      } else {\n        timeline.fromTo(astro, {\n          y: 10,\n          x: 0,\n          rotateZ: -10\n        }, {\n          y: \"random(-20, -100)\",\n          x: \"random(0, 400)\",\n          rotateZ: 10,\n          duration: \"random(4, 7)\",\n          ...loopSineInOut,\n          repeatRefresh: true\n        }, 0);\n      }\n\n      timeline.fromTo(head, {\n        x: -10,\n        rotateZ: 0\n      }, {\n        x: 10,\n        rotateZ: \"random(0, 4)\",\n        duration: \"random(1, 2)\",\n        repeatDelay: 1,\n        transformOrigin: \"50% 50%\",\n        ...loopSineInOut,\n        repeatRefresh: true\n      }, 0).fromTo(hand, {\n        y: 5,\n        rotateZ: 0\n      }, {\n        y: 1,\n        rotateZ: \"random(9,12)\",\n        duration: 1,\n        repeatDelay: 2,\n        transformOrigin: \"10% 80%\",\n        ...loopSineInOut\n      }, 0);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAOA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,KAA/B;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,UAAU,EAAE;IAAEN;EAAF,CAFC;EAGbO,MAAM,EAAE,CAACL,YAAD,CAHK;EAIbM,KAAK,EAAE;IACLC,SAAS,EAAEC;EADN,CAJM;EAObC,OAAO,EAAE;IACPC,IAAI,GAAG;MACL,MAAMC,KAAI,GAAI,KAAKC,KAAL,CAAWC,WAAX,CAAuBD,KAAvB,CAA6BE,QAA3C;MACA,MAAMC,IAAG,GAAI,KAAKH,KAAL,CAAWC,WAAX,CAAuBD,KAAvB,CAA6BI,YAA1C;MACA,MAAMC,IAAG,GAAI,KAAKL,KAAL,CAAWC,WAAX,CAAuBD,KAAvB,CAA6BM,WAA1C;MAEA,IAAIC,QAAJ;;MACA,IAAIlB,OAAO,CAAC,KAAKkB,QAAN,CAAX,EAA4B;QAC1BA,QAAO,GAAIjB,KAAK,CAAC,KAAKiB,QAAN,CAAhB;MACF;;MAEA,IAAIC,MAAM,CAACC,UAAP,CAAmB,oBAAnB,EAAwCC,OAA5C,EAAqD;QACnDH,QAAQ,CAACI,MAAT,CACEZ,KADF,EAEE;UAAEa,CAAC,EAAE,CAAC,EAAN;UAAUC,CAAC,EAAE,EAAb;UAAiBC,MAAM,EAAE,CAAC;QAA1B,CAFF,EAGE;UACEC,OAAO,EAAE,CAAC,EADZ;UAEEH,CAAC,EAAE,kBAFL;UAGEC,CAAC,EAAE,gBAHL;UAIEG,QAAQ,EAAE,cAJZ;UAKE,GAAG7B,aALL;UAME8B,aAAa,EAAE;QANjB,CAHF,EAWE,CAXF;MAaF,CAdA,MAcO;QACLV,QAAQ,CAACI,MAAT,CACEZ,KADF,EAEE;UAAEa,CAAC,EAAE,EAAL;UAASC,CAAC,EAAE,CAAZ;UAAeE,OAAO,EAAE,CAAC;QAAzB,CAFF,EAGE;UACEH,CAAC,EAAE,mBADL;UAEEC,CAAC,EAAE,gBAFL;UAGEE,OAAO,EAAE,EAHX;UAIEC,QAAQ,EAAE,cAJZ;UAKE,GAAG7B,aALL;UAME8B,aAAa,EAAE;QANjB,CAHF,EAWE,CAXF;MAaF;;MAEAV,QAAO,CACJI,MADH,CAEIR,IAFJ,EAGI;QAAEU,CAAC,EAAE,CAAC,EAAN;QAAUE,OAAO,EAAE;MAAnB,CAHJ,EAII;QACEF,CAAC,EAAE,EADL;QAEEE,OAAO,EAAE,cAFX;QAGEC,QAAQ,EAAE,cAHZ;QAIEE,WAAW,EAAE,CAJf;QAKEC,eAAe,EAAE,SALnB;QAME,GAAGhC,aANL;QAOE8B,aAAa,EAAE;MAPjB,CAJJ,EAaI,CAbJ,EAeGN,MAfH,CAgBIN,IAhBJ,EAiBI;QAAEO,CAAC,EAAE,CAAL;QAAQG,OAAO,EAAE;MAAjB,CAjBJ,EAkBI;QACEH,CAAC,EAAE,CADL;QAEEG,OAAO,EAAE,cAFX;QAGEC,QAAQ,EAAE,CAHZ;QAIEE,WAAW,EAAE,CAJf;QAKEC,eAAe,EAAE,SALnB;QAME,GAAGhC;MANL,CAlBJ,EA0BI,CA1BJ;IA4BD;;EArEM;AAPI,CAAf","names":["AstroAirSvg","loopSineInOut","setAnimation","isProxy","toRaw","name","components","mixins","props","isPlaying","Boolean","methods","init","astro","$refs","astroAirSvg","astroAir","head","astroAirHead","hand","astroAirArm","timeline","window","matchMedia","matches","fromTo","y","x","rotate","rotateZ","duration","repeatRefresh","repeatDelay","transformOrigin"],"sourceRoot":"","sources":["/home/runner/work/portfolio/portfolio/src/components/characters/airastro/AstroAir.vue"],"sourcesContent":["<template>\n  <div id=\"astroAir\">\n    <AstroAirSvg ref=\"astroAirSvg\" />\n  </div>\n</template>\n\n<script>\nimport AstroAirSvg from \"./AstroAirSvg.vue\";\nimport { loopSineInOut } from \"@/constants\";\nimport { setAnimation } from \"../switchAnimation\";\nimport { isProxy, toRaw } from \"vue\";\n\nexport default {\n  name: \"AstroAir\",\n  components: { AstroAirSvg },\n  mixins: [setAnimation],\n  props: {\n    isPlaying: Boolean,\n  },\n  methods: {\n    init() {\n      const astro = this.$refs.astroAirSvg.$refs.astroAir;\n      const head = this.$refs.astroAirSvg.$refs.astroAirHead;\n      const hand = this.$refs.astroAirSvg.$refs.astroAirArm;\n\n      let timeline;\n      if (isProxy(this.timeline)) {\n        timeline = toRaw(this.timeline);\n      }\n\n      if (window.matchMedia(`(max-width: 576px)`).matches) {\n        timeline.fromTo(\n          astro,\n          { y: -30, x: 10, rotate: -25 },\n          {\n            rotateZ: -30,\n            y: \"random(-30, -30)\",\n            x: \"random(10, 40)\",\n            duration: \"random(4, 7)\",\n            ...loopSineInOut,\n            repeatRefresh: true,\n          },\n          0\n        );\n      } else {\n        timeline.fromTo(\n          astro,\n          { y: 10, x: 0, rotateZ: -10 },\n          {\n            y: \"random(-20, -100)\",\n            x: \"random(0, 400)\",\n            rotateZ: 10,\n            duration: \"random(4, 7)\",\n            ...loopSineInOut,\n            repeatRefresh: true,\n          },\n          0\n        );\n      }\n\n      timeline\n        .fromTo(\n          head,\n          { x: -10, rotateZ: 0 },\n          {\n            x: 10,\n            rotateZ: \"random(0, 4)\",\n            duration: \"random(1, 2)\",\n            repeatDelay: 1,\n            transformOrigin: \"50% 50%\",\n            ...loopSineInOut,\n            repeatRefresh: true,\n          },\n          0\n        )\n        .fromTo(\n          hand,\n          { y: 5, rotateZ: 0 },\n          {\n            y: 1,\n            rotateZ: \"random(9,12)\",\n            duration: 1,\n            repeatDelay: 2,\n            transformOrigin: \"10% 80%\",\n            ...loopSineInOut,\n          },\n          0\n        );\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
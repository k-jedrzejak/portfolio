{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TheClockSvg = _resolveComponent(\"TheClockSvg\");\n\n  return _openBlock(), _createBlock(_component_TheClockSvg, {\n    secondTransform: $options.secondTransform,\n    secondShadowTransform: $options.secondShadowTransform,\n    minuteTransform: $options.minuteTransform,\n    minuteShadowTransform: $options.minuteShadowTransform,\n    hourTransform: $options.hourTransform,\n    hourShadowTransform: $options.hourShadowTransform\n  }, null, 8, [\"secondTransform\", \"secondShadowTransform\", \"minuteTransform\", \"minuteShadowTransform\", \"hourTransform\", \"hourShadowTransform\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAOEC,sBAPF,EAOE;IANCC,eAAe,EAAEC,wBAMlB;IALCC,qBAAqB,EAAED,8BAKxB;IAJCE,eAAe,EAAEF,wBAIlB;IAHCG,qBAAqB,EAAEH,8BAGxB;IAFCI,aAAa,EAAEJ,sBAEhB;IADCK,mBAAmB,EAAEL;EACtB,CAPF","names":["_createBlock","_component_TheClockSvg","secondTransform","$options","secondShadowTransform","minuteTransform","minuteShadowTransform","hourTransform","hourShadowTransform"],"sourceRoot":"","sources":["/home/runner/work/portfolio/portfolio/src/components/characters/clock/TheClock.vue"],"sourcesContent":["<template>\n  <TheClockSvg\n    :secondTransform=\"secondTransform\"\n    :secondShadowTransform=\"secondShadowTransform\"\n    :minuteTransform=\"minuteTransform\"\n    :minuteShadowTransform=\"minuteShadowTransform\"\n    :hourTransform=\"hourTransform\"\n    :hourShadowTransform=\"hourShadowTransform\"\n  />\n</template>\n\n<script>\nimport TheClockSvg from \"./TheClockSvg.vue\";\n\nexport default {\n  name: \"AstroMagento\",\n  components: { TheClockSvg },\n  props: {\n    isPlaying: Boolean,\n  },\n  data() {\n    return {\n      rotation: {\n        Second: 0,\n        SecondShadow: 0,\n        Minute: 0,\n        MinuteShadow: 0,\n        Hour: 0,\n        HourShadow: 0,\n      },\n    };\n  },\n  methods: {\n    updateClockHands() {\n      const currentDate = new Date();\n      const seconds = currentDate.getSeconds();\n      const minutes = currentDate.getMinutes() + seconds / 60;\n      const hours = currentDate.getHours() + minutes / 60;\n\n      this.setRotation(\"Second\", seconds * 6);\n      this.setRotation(\"SecondShadow\", seconds * 6);\n      this.setRotation(\"Minute\", minutes * 6);\n      this.setRotation(\"MinuteShadow\", minutes * 6);\n      this.setRotation(\"Hour\", hours * 30);\n      this.setRotation(\"HourShadow\", hours * 30);\n    },\n    setRotation(hand, degree) {\n      this.rotation[hand] = degree;\n    },\n  },\n  mounted() {\n    this.updateClockHands();\n    this.intervalId = setInterval(this.updateClockHands, 1000);\n  },\n  beforeUnmount() {\n    clearInterval(this.intervalId);\n  },\n  computed: {\n    secondTransform() {\n      return `rotate(${this.rotation.Second}, 256, 256)`;\n    },\n    secondShadowTransform() {\n      return `rotate(${this.rotation.SecondShadow}, 253, 259)`;\n    },\n    minuteTransform() {\n      return `rotate(${this.rotation.Minute}, 256, 256)`;\n    },\n    minuteShadowTransform() {\n      return `rotate(${this.rotation.MinuteShadow}, 254, 258)`;\n    },\n    hourTransform() {\n      return `rotate(${this.rotation.Hour}, 256, 256)`;\n    },\n    hourShadowTransform() {\n      return `rotate(${this.rotation.HourShadow}, 255, 257)`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
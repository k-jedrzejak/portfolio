{"ast":null,"code":"import AstroTimeSvg from \"./AstroTimeSvg.vue\";\nimport { gsap } from \"gsap\";\nimport { loopBackInOut, basicLoop, loopSineInOut } from \"@/constants\";\nimport { setAnimation } from \"../switchAnimation\";\nimport { isProxy, toRaw } from \"vue\";\nexport default {\n  name: \"AstroTime\",\n  components: {\n    AstroTimeSvg\n  },\n  mixins: [setAnimation],\n  props: {\n    isPlaying: Boolean\n  },\n\n  data() {\n    return {\n      intervalId: null\n    };\n  },\n\n  methods: {\n    init() {\n      const astronaut = document.querySelector(\"#astronaut\");\n      const stars = document.querySelectorAll(\"#astroTime .star\");\n      const dots = document.querySelectorAll(\"#astroTime .dot\");\n      const leftHand = document.querySelector(\"#hand-left\");\n      const rightHand = document.querySelector(\"#hand-right\");\n      const head = document.querySelector(\"#astroHead\");\n      let timeline;\n\n      if (isProxy(this.timeline)) {\n        timeline = toRaw(this.timeline);\n      }\n      /* astronaut */\n\n\n      timeline.fromTo(astronaut, {\n        y: -45,\n        x: 0\n      }, {\n        y: \"random(-410, 10)\",\n        x: \"random(-50, 50)\",\n        duration: \"random(2, 4)\",\n        ...loopSineInOut,\n        repeatRefresh: true\n      }, 0);\n      /* head */\n\n      timeline.fromTo(head, {\n        rotateZ: -5,\n        y: 90\n      }, {\n        rotate: 1,\n        y: 90,\n        repeatDelay: 3,\n        duration: \"random(1, 6)\",\n        transformOrigin: \"50% 50%\",\n        ...loopSineInOut,\n        repeatRefresh: true\n      }, 0);\n      /* left hand */\n\n      timeline.fromTo(leftHand, {\n        rotateZ: -3\n      }, {\n        rotate: 4,\n        duration: 2,\n        repeatDelay: 3,\n        ...loopSineInOut,\n        repeatRefresh: true\n      }, 0);\n      /* right hand */\n\n      timeline.fromTo(rightHand, {\n        rotateZ: -4\n      }, {\n        rotate: 3,\n        duration: 2,\n        repeatDelay: 3,\n        ...loopSineInOut,\n        repeatRefresh: true\n      }, 0);\n      /* stars */\n\n      stars.forEach(star => {\n        timeline.fromTo(star, {\n          x: 0,\n          y: 0,\n          rotate: 0\n        }, {\n          x: \"random(-1000, 10)\",\n          y: \"random(-1000, 1000)\",\n          rotate: \"random([-360, -180, -30, 30, 180, 360])\",\n          transformOrigin: \"50% 50%\",\n          duration: 20,\n          ...basicLoop,\n          repeatRefresh: true\n        }, 0);\n      });\n      /* dots */\n\n      dots.forEach(dot => {\n        timeline.fromTo(dot, {\n          scale: 0\n        }, {\n          scale: \"random(0.1, 1)\",\n          transformOrigin: \"50% 50%\",\n          duration: \"random(1, 5)\",\n          ...loopBackInOut,\n          repeatRefresh: true,\n          onStart: function () {\n            gsap.to(dot, {\n              x: \"random(-300, 100)\",\n              y: \"random(-1000, 1000)\",\n              duration: 2\n            });\n          }\n        }, 0);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAKA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,aAAnC,QAAwD,aAAxD;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,KAA/B;AAEA,eAAe;EACbC,IAAI,EAAE,WADO;EAEbC,UAAU,EAAE;IAAET;EAAF,CAFC;EAGbU,MAAM,EAAE,CAACL,YAAD,CAHK;EAIbM,KAAK,EAAE;IACLC,SAAS,EAAEC;EADN,CAJM;;EAObC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;IADP,CAAP;EAGD,CAXY;;EAYbC,OAAO,EAAE;IACPC,IAAI,GAAG;MACL,MAAMC,SAAQ,GAAIC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;MACA,MAAMC,KAAI,GAAIF,QAAQ,CAACG,gBAAT,CAA0B,kBAA1B,CAAd;MACA,MAAMC,IAAG,GAAIJ,QAAQ,CAACG,gBAAT,CAA0B,iBAA1B,CAAb;MACA,MAAME,QAAO,GAAIL,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAjB;MACA,MAAMK,SAAQ,GAAIN,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;MACA,MAAMM,IAAG,GAAIP,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAb;MAEA,IAAIO,QAAJ;;MACA,IAAIrB,OAAO,CAAC,KAAKqB,QAAN,CAAX,EAA4B;QAC1BA,QAAO,GAAIpB,KAAK,CAAC,KAAKoB,QAAN,CAAhB;MACF;MAEA;;;MACAA,QAAQ,CAACC,MAAT,CACEV,SADF,EAEE;QAAEW,CAAC,EAAE,CAAC,EAAN;QAAUC,CAAC,EAAE;MAAb,CAFF,EAGE;QACED,CAAC,EAAE,kBADL;QAEEC,CAAC,EAAE,iBAFL;QAGEC,QAAQ,EAAE,cAHZ;QAIE,GAAG3B,aAJL;QAKE4B,aAAa,EAAE;MALjB,CAHF,EAUE,CAVF;MAaA;;MACAL,QAAQ,CAACC,MAAT,CACEF,IADF,EAEE;QAAEO,OAAO,EAAE,CAAC,CAAZ;QAAeJ,CAAC,EAAE;MAAlB,CAFF,EAGE;QACEK,MAAM,EAAE,CADV;QAEEL,CAAC,EAAE,EAFL;QAGEM,WAAW,EAAE,CAHf;QAIEJ,QAAQ,EAAE,cAJZ;QAKEK,eAAe,EAAE,SALnB;QAME,GAAGhC,aANL;QAOE4B,aAAa,EAAE;MAPjB,CAHF,EAYE,CAZF;MAeA;;MACAL,QAAQ,CAACC,MAAT,CACEJ,QADF,EAEE;QAAES,OAAO,EAAE,CAAC;MAAZ,CAFF,EAGE;QACEC,MAAM,EAAE,CADV;QAEEH,QAAQ,EAAE,CAFZ;QAGEI,WAAW,EAAE,CAHf;QAIE,GAAG/B,aAJL;QAKE4B,aAAa,EAAE;MALjB,CAHF,EAUE,CAVF;MAaA;;MACAL,QAAQ,CAACC,MAAT,CACEH,SADF,EAEE;QAAEQ,OAAO,EAAE,CAAC;MAAZ,CAFF,EAGE;QACEC,MAAM,EAAE,CADV;QAEEH,QAAQ,EAAE,CAFZ;QAGEI,WAAW,EAAE,CAHf;QAIE,GAAG/B,aAJL;QAKE4B,aAAa,EAAE;MALjB,CAHF,EAUE,CAVF;MAaA;;MACAX,KAAK,CAACgB,OAAN,CAAeC,IAAD,IAAU;QACtBX,QAAQ,CAACC,MAAT,CACEU,IADF,EAEE;UAAER,CAAC,EAAE,CAAL;UAAQD,CAAC,EAAE,CAAX;UAAcK,MAAM,EAAE;QAAtB,CAFF,EAGE;UACEJ,CAAC,EAAE,mBADL;UAEED,CAAC,EAAE,qBAFL;UAGEK,MAAM,EAAE,yCAHV;UAIEE,eAAe,EAAE,SAJnB;UAMEL,QAAQ,EAAE,EANZ;UAOE,GAAG5B,SAPL;UAQE6B,aAAa,EAAE;QARjB,CAHF,EAaE,CAbF;MAeD,CAhBD;MAkBA;;MACAT,IAAI,CAACc,OAAL,CAAcE,GAAD,IAAS;QACpBZ,QAAQ,CAACC,MAAT,CACEW,GADF,EAEE;UAAEC,KAAK,EAAE;QAAT,CAFF,EAGE;UACEA,KAAK,EAAE,gBADT;UAEEJ,eAAe,EAAE,SAFnB;UAGEL,QAAQ,EAAE,cAHZ;UAIE,GAAG7B,aAJL;UAKE8B,aAAa,EAAE,IALjB;UAMES,OAAO,EAAE,YAAY;YACnBxC,IAAI,CAACyC,EAAL,CAAQH,GAAR,EAAa;cACXT,CAAC,EAAE,mBADQ;cAEXD,CAAC,EAAE,qBAFQ;cAGXE,QAAQ,EAAE;YAHC,CAAb;UAKD;QAZH,CAHF,EAiBE,CAjBF;MAmBD,CApBD;IAqBD;;EAjHM;AAZI,CAAf","names":["AstroTimeSvg","gsap","loopBackInOut","basicLoop","loopSineInOut","setAnimation","isProxy","toRaw","name","components","mixins","props","isPlaying","Boolean","data","intervalId","methods","init","astronaut","document","querySelector","stars","querySelectorAll","dots","leftHand","rightHand","head","timeline","fromTo","y","x","duration","repeatRefresh","rotateZ","rotate","repeatDelay","transformOrigin","forEach","star","dot","scale","onStart","to"],"sourceRoot":"","sources":["/home/runner/work/portfolio/portfolio/src/components/characters/astronaut/AstroTime.vue"],"sourcesContent":["<template>\n  <AstroTimeSvg />\n</template>\n\n<script>\nimport AstroTimeSvg from \"./AstroTimeSvg.vue\";\nimport { gsap } from \"gsap\";\n\nimport { loopBackInOut, basicLoop, loopSineInOut } from \"@/constants\";\nimport { setAnimation } from \"../switchAnimation\";\nimport { isProxy, toRaw } from \"vue\";\n\nexport default {\n  name: \"AstroTime\",\n  components: { AstroTimeSvg },\n  mixins: [setAnimation],\n  props: {\n    isPlaying: Boolean,\n  },\n  data() {\n    return {\n      intervalId: null,\n    };\n  },\n  methods: {\n    init() {\n      const astronaut = document.querySelector(\"#astronaut\");\n      const stars = document.querySelectorAll(\"#astroTime .star\");\n      const dots = document.querySelectorAll(\"#astroTime .dot\");\n      const leftHand = document.querySelector(\"#hand-left\");\n      const rightHand = document.querySelector(\"#hand-right\");\n      const head = document.querySelector(\"#astroHead\");\n\n      let timeline;\n      if (isProxy(this.timeline)) {\n        timeline = toRaw(this.timeline);\n      }\n\n      /* astronaut */\n      timeline.fromTo(\n        astronaut,\n        { y: -45, x: 0 },\n        {\n          y: \"random(-410, 10)\",\n          x: \"random(-50, 50)\",\n          duration: \"random(2, 4)\",\n          ...loopSineInOut,\n          repeatRefresh: true,\n        },\n        0\n      );\n\n      /* head */\n      timeline.fromTo(\n        head,\n        { rotateZ: -5, y: 90 },\n        {\n          rotate: 1,\n          y: 90,\n          repeatDelay: 3,\n          duration: \"random(1, 6)\",\n          transformOrigin: \"50% 50%\",\n          ...loopSineInOut,\n          repeatRefresh: true,\n        },\n        0\n      );\n\n      /* left hand */\n      timeline.fromTo(\n        leftHand,\n        { rotateZ: -3 },\n        {\n          rotate: 4,\n          duration: 2,\n          repeatDelay: 3,\n          ...loopSineInOut,\n          repeatRefresh: true,\n        },\n        0\n      );\n\n      /* right hand */\n      timeline.fromTo(\n        rightHand,\n        { rotateZ: -4 },\n        {\n          rotate: 3,\n          duration: 2,\n          repeatDelay: 3,\n          ...loopSineInOut,\n          repeatRefresh: true,\n        },\n        0\n      );\n\n      /* stars */\n      stars.forEach((star) => {\n        timeline.fromTo(\n          star,\n          { x: 0, y: 0, rotate: 0 },\n          {\n            x: \"random(-1000, 10)\",\n            y: \"random(-1000, 1000)\",\n            rotate: \"random([-360, -180, -30, 30, 180, 360])\",\n            transformOrigin: \"50% 50%\",\n\n            duration: 20,\n            ...basicLoop,\n            repeatRefresh: true,\n          },\n          0\n        );\n      });\n\n      /* dots */\n      dots.forEach((dot) => {\n        timeline.fromTo(\n          dot,\n          { scale: 0 },\n          {\n            scale: \"random(0.1, 1)\",\n            transformOrigin: \"50% 50%\",\n            duration: \"random(1, 5)\",\n            ...loopBackInOut,\n            repeatRefresh: true,\n            onStart: function () {\n              gsap.to(dot, {\n                x: \"random(-300, 100)\",\n                y: \"random(-1000, 1000)\",\n                duration: 2,\n              });\n            },\n          },\n          0\n        );\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}